"{\"nbformat\":4,\"nbformat_minor\":0,\"metadata\":{\"colab\":{\"name\":\"Find the function.ipynb\",\"version\":\"0.3.2\",\"provenance\":[],\"collapsed_sections\":[]},\"kernelspec\":{\"name\":\"python3\",\"display_name\":\"Python 3\"},\"language_info\":{\"name\":\"python\"}},\"cells\":[{\"metadata\":{\"id\":\"hO7epAvUoNY_\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"# Find the function\\n\",\"\\n\",\"Click play to optionally watch a 4-minute introduction to Jupyter notebooks. This video will also walk you through the code used in the notebook. \\n\"]},{\"metadata\":{\"id\":\"zebfzVxEoaaf\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":336},\"outputId\":\"6088c111-3308-44af-a50d-22a2a5e9be8e\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540125731664,\"user_tz\":-480,\"elapsed\":746,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"from IPython.display import HTML\\n\",\"HTML('<iframe width=\\\"640\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/FaBtQv5bqwQ\\\"frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>')\"],\"execution_count\":16,\"outputs\":[{\"output_type\":\"execute_result\",\"data\":{\"text/html\":[\"<iframe width=\\\"640\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/FaBtQv5bqwQ\\\"frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>\"],\"text/plain\":[\"<IPython.core.display.HTML object>\"]},\"metadata\":{\"tags\":[]},\"execution_count\":16}]},{\"metadata\":{\"id\":\"ZdKUNd7aSdF8\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"Adjust the values for slope and intercept so that\\n\",\"the function f(X) can acurately predict the value of y\\n\",\"for every value of x in the list X. Put more simply, adjust the values\\n\",\"of slope and intercept so that the red line for the yPredictions\\n\",\"goes through all the blue points. \"]},{\"metadata\":{\"id\":\"675ehEhRST--\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":265},\"outputId\":\"42555250-4460-489d-ea1d-162527a010f0\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540120386254,\"user_tz\":-480,\"elapsed\":1093,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"X = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"Y = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"\\n\",\"def f(X):\\n\",\"  slope = 1      # You will be editing this line\\n\",\"  intercept = 0  # You will be editing this line  \\n\",\"  Y = [] \\n\",\"  for x in X: \\n\",\"    y = slope * x + intercept # y = mx + b\\n\",\"    Y.append(y)\\n\",\"  return Y\\n\",\"yPredictions = f(X)\\n\",\"import matplotlib.pyplot as plt\\n\",\"%matplotlib inline\\n\",\"plt.plot(X, Y, 'o', color='blue'); # just points\\n\",\"plt.plot(X, yPredictions, '-ok', color='red'); # just points\\n\"],\"execution_count\":7,\"outputs\":[{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":[\"<matplotlib.figure.Figure at 0x7f27598e8978>\"]},\"metadata\":{\"tags\":[]}}]},{\"metadata\":{\"id\":\"lGndFdWYS7nq\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"# Tests\\n\",\"\\n\",\"In order to test your solution, we are going to call your function \\n\",\"for each value of x and make sure that it matches the value for y that \\n\",\"we are looking for. As long as the expression passed to assert() is True \\n\",\"such as 1 == 1 or 5 == 5, then the assertion will not do anything. However, \\n\",\"if an expression that evaluates to False is ever passed to assert such as \\n\",\"1 == 2, then the assertion will throw an error. If you picked the correct values \\n\",\"for slope and intercept above, then all of the assertions should pass and \\n\",\"there will not be any output for this code block. \"]},{\"metadata\":{\"id\":\"Xm3Hwp6_Sv50\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":399},\"outputId\":\"6afa0f05-6cc6-4c59-a638-7b45c46c2ddb\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540120565106,\"user_tz\":-480,\"elapsed\":737,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"X = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"Y = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"\\n\",\"yPredictions = f(X)\\n\",\"\\n\",\"passed = True\\n\",\"for index in range(len(Y)):\\n\",\"  try: \\n\",\"    assert( Y[index] == yPredictions[index] )\\n\",\"  except: \\n\",\"    print(\\\"Expected\\\", Y[index], 'but received', yPredictions[index])\\n\",\"    passed = False\\n\",\"    \\n\",\"if not passed: \\n\",\"  plt.plot(X, Y, 'o', color='blue'); # just points\\n\",\"  plt.plot(X, yPredictions, '-ok', color='red'); # just points\"],\"execution_count\":8,\"outputs\":[{\"output_type\":\"stream\",\"text\":[\"Expected -4 but received -12\\n\",\"Expected -3 but received -9\\n\",\"Expected -2 but received -6\\n\",\"Expected -1 but received -3\\n\",\"Expected 1 but received 3\\n\",\"Expected 2 but received 6\\n\",\"Expected 3 but received 9\\n\",\"Expected 4 but received 12\\n\"],\"name\":\"stdout\"},{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":[\"<matplotlib.figure.Figure at 0x7f275700cda0>\"]},\"metadata\":{\"tags\":[]}}]}],\"result\":{\"nbformat\":4,\"nbformat_minor\":0,\"metadata\":{\"colab\":{\"name\":\"Find the function.ipynb\",\"version\":\"0.3.2\",\"provenance\":[],\"collapsed_sections\":[]},\"kernelspec\":{\"name\":\"python3\",\"display_name\":\"Python 3\"}},\"cells\":[{\"metadata\":{\"id\":\"hO7epAvUoNY_\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"# Find the function\\n\",\"\\n\",\"Click play to optionally watch a 4-minute introduction to Jupyter notebooks. This video will also walk you through the code used in the notebook. \\n\"]},{\"metadata\":{\"id\":\"zebfzVxEoaaf\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":336},\"outputId\":\"6088c111-3308-44af-a50d-22a2a5e9be8e\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540125731664,\"user_tz\":-480,\"elapsed\":746,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"from IPython.display import HTML\\n\",\"HTML('<iframe width=\\\"640\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/FaBtQv5bqwQ\\\"frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>')\"],\"execution_count\":16,\"outputs\":[{\"output_type\":\"execute_result\",\"data\":{\"text/html\":[\"<iframe width=\\\"640\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/FaBtQv5bqwQ\\\"frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>\"],\"text/plain\":[\"<IPython.core.display.HTML object>\"]},\"metadata\":{\"tags\":[]},\"execution_count\":16}]},{\"metadata\":{\"id\":\"ZdKUNd7aSdF8\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"Adjust the values for slope and intercept so that\\n\",\"the function f(X) can acurately predict the value of y\\n\",\"for every value of x in the list X. Put more simply, adjust the values\\n\",\"of slope and intercept so that the red line for the yPredictions\\n\",\"goes through all the blue points. \"]},{\"metadata\":{\"id\":\"675ehEhRST--\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":265},\"outputId\":\"42555250-4460-489d-ea1d-162527a010f0\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540120386254,\"user_tz\":-480,\"elapsed\":1093,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"X = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"Y = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"\\n\",\"\\n\",\"def f(X):\\n\",\"  slope = 3      # You will be editing this line\\n\",\"  intercept = 0  # You will be editing this line  \\n\",\"  Y = [] \\n\",\"  for x in X: \\n\",\"    y = slope * x + intercept # y = mx + b\\n\",\"    Y.append(y)\\n\",\"  return Y\\n\",\"\\n\",\"yPredictions = f(X)\\n\",\"\\n\",\"import matplotlib.pyplot as plt\\n\",\"%matplotlib inline\\n\",\"plt.plot(X, Y, 'o', color='blue'); # just points\\n\",\"plt.plot(X, yPredictions, '-ok', color='red'); # just points\"],\"execution_count\":7,\"outputs\":[{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":[\"<matplotlib.figure.Figure at 0x7f27598e8978>\"]},\"metadata\":{\"tags\":[]}}]},{\"metadata\":{\"id\":\"lGndFdWYS7nq\",\"colab_type\":\"text\"},\"cell_type\":\"markdown\",\"source\":[\"# Tests\\n\",\"\\n\",\"In order to test your solution, we are going to call your function \\n\",\"for each value of x and make sure that it matches the value for y that \\n\",\"we are looking for. As long as the expression passed to assert() is True \\n\",\"such as 1 == 1 or 5 == 5, then the assertion will not do anything. However, \\n\",\"if an expression that evaluates to False is ever passed to assert such as \\n\",\"1 == 2, then the assertion will throw an error. If you picked the correct values \\n\",\"for slope and intercept above, then all of the assertions should pass and \\n\",\"there will not be any output for this code block. \"]},{\"metadata\":{\"id\":\"Xm3Hwp6_Sv50\",\"colab_type\":\"code\",\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":399},\"outputId\":\"6afa0f05-6cc6-4c59-a638-7b45c46c2ddb\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1540120565106,\"user_tz\":-480,\"elapsed\":737,\"user\":{\"displayName\":\"Chris Boesch\",\"photoUrl\":\"\",\"userId\":\"02177886283270676009\"}}},\"cell_type\":\"code\",\"source\":[\"X = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"Y = [-4,-3,-2,-1,0,1,2,3,4]\\n\",\"\\n\",\"yPredictions = f(X)\\n\",\"\\n\",\"passed = True\\n\",\"for index in range(len(Y)):\\n\",\"  try: \\n\",\"    assert( Y[index] == yPredictions[index] )\\n\",\"  except: \\n\",\"    print(\\\"Expected\\\", Y[index], 'but received', yPredictions[index])\\n\",\"    passed = False\\n\",\"    \\n\",\"if not passed: \\n\",\"  plt.plot(X, Y, 'o', color='blue'); # just points\\n\",\"  plt.plot(X, yPredictions, '-ok', color='red'); # just points\"],\"execution_count\":8,\"outputs\":[{\"output_type\":\"stream\",\"text\":[\"Expected -4 but received -12\\n\",\"Expected -3 but received -9\\n\",\"Expected -2 but received -6\\n\",\"Expected -1 but received -3\\n\",\"Expected 1 but received 3\\n\",\"Expected 2 but received 6\\n\",\"Expected 3 but received 9\\n\",\"Expected 4 but received 12\\n\"],\"name\":\"stdout\"},{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":[\"<matplotlib.figure.Figure at 0x7f275700cda0>\"]},\"metadata\":{\"tags\":[]}}]}]},\"updatedAt\":1541064666027,\"version\":\"0.0.38\"}"