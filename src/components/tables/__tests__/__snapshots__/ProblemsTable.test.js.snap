// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProblemsTable> should check snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProblemsTable
    classes={
        Object {
            "button": "ProblemsTable-button-2",
            "link": "ProblemsTable-link-1",
          }
    }
    dispatch={[Function]}
    problems={
        Array [
            Object {
              "id": "test",
              "name": "Test",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(TableHead)>
          <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                              Problem name
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                              style={
                                        Object {
                                                  "width": 240,
                                                }
                              }
                    >
                              Actions
                    </WithStyles(TableCell)>
          </WithStyles(TableRow)>
</WithStyles(TableHead)>,
        <WithStyles(TableBody)>
          <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                              Test
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                              <Link
                                        className="ProblemsTable-link-1"
                                        replace={false}
                                        to="/paths/undefined/problems/test"
                              >
                                        <WithStyles(Button)
                                                  variant="raised"
                                        >
                                                  Open
                                        </WithStyles(Button)>
                              </Link>
                              <WithStyles(Button)
                                        className="ProblemsTable-button-2"
                                        onClick={[Function]}
                                        variant="raised"
                              >
                                        Edit
                              </WithStyles(Button)>
                    </WithStyles(TableCell)>
          </WithStyles(TableRow)>
</WithStyles(TableBody)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(TableRow)>
            <WithStyles(TableCell)>
                        Problem name
            </WithStyles(TableCell)>
            <WithStyles(TableCell)
                        style={
                                    Object {
                                                "width": 240,
                                              }
                        }
            >
                        Actions
            </WithStyles(TableCell)>
</WithStyles(TableRow)>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(TableCell)>
                Problem name
</WithStyles(TableCell)>,
              <WithStyles(TableCell)
                style={
                                Object {
                                                "width": 240,
                                              }
                }
>
                Actions
</WithStyles(TableCell)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Problem name",
              },
              "ref": null,
              "rendered": "Problem name",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Actions",
                "style": Object {
                  "width": 240,
                },
              },
              "ref": null,
              "rendered": "Actions",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(TableRow)>
              <WithStyles(TableCell)>
                            Test
              </WithStyles(TableCell)>
              <WithStyles(TableCell)>
                            <Link
                                          className="ProblemsTable-link-1"
                                          replace={false}
                                          to="/paths/undefined/problems/test"
                            >
                                          <WithStyles(Button)
                                                        variant="raised"
                                          >
                                                        Open
                                          </WithStyles(Button)>
                            </Link>
                            <WithStyles(Button)
                                          className="ProblemsTable-button-2"
                                          onClick={[Function]}
                                          variant="raised"
                            >
                                          Edit
                            </WithStyles(Button)>
              </WithStyles(TableCell)>
</WithStyles(TableRow)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "test",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableCell)>
                  Test
</WithStyles(TableCell)>,
                <WithStyles(TableCell)>
                  <Link
                                    className="ProblemsTable-link-1"
                                    replace={false}
                                    to="/paths/undefined/problems/test"
                  >
                                    <WithStyles(Button)
                                                      variant="raised"
                                    >
                                                      Open
                                    </WithStyles(Button)>
                  </Link>
                  <WithStyles(Button)
                                    className="ProblemsTable-button-2"
                                    onClick={[Function]}
                                    variant="raised"
                  >
                                    Edit
                  </WithStyles(Button)>
</WithStyles(TableCell)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Test",
                },
                "ref": null,
                "rendered": "Test",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Link
                      className="ProblemsTable-link-1"
                      replace={false}
                      to="/paths/undefined/problems/test"
>
                      <WithStyles(Button)
                                            variant="raised"
                      >
                                            Open
                      </WithStyles(Button)>
</Link>,
                    <WithStyles(Button)
                      className="ProblemsTable-button-2"
                      onClick={[Function]}
                      variant="raised"
>
                      Edit
</WithStyles(Button)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <WithStyles(Button)
                        variant="raised"
>
                        Open
</WithStyles(Button)>,
                      "className": "ProblemsTable-link-1",
                      "replace": false,
                      "to": "/paths/undefined/problems/test",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Open",
                        "variant": "raised",
                      },
                      "ref": null,
                      "rendered": "Open",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Edit",
                      "className": "ProblemsTable-button-2",
                      "onClick": [Function],
                      "variant": "raised",
                    },
                    "ref": null,
                    "rendered": "Edit",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(TableHead)>
            <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                                    Problem name
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)
                                    style={
                                                Object {
                                                            "width": 240,
                                                          }
                                    }
                        >
                                    Actions
                        </WithStyles(TableCell)>
            </WithStyles(TableRow)>
</WithStyles(TableHead)>,
          <WithStyles(TableBody)>
            <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                                    Test
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                                    <Link
                                                className="ProblemsTable-link-1"
                                                replace={false}
                                                to="/paths/undefined/problems/test"
                                    >
                                                <WithStyles(Button)
                                                            variant="raised"
                                                >
                                                            Open
                                                </WithStyles(Button)>
                                    </Link>
                                    <WithStyles(Button)
                                                className="ProblemsTable-button-2"
                                                onClick={[Function]}
                                                variant="raised"
                                    >
                                                Edit
                                    </WithStyles(Button)>
                        </WithStyles(TableCell)>
            </WithStyles(TableRow)>
</WithStyles(TableBody)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(TableRow)>
              <WithStyles(TableCell)>
                            Problem name
              </WithStyles(TableCell)>
              <WithStyles(TableCell)
                            style={
                                          Object {
                                                        "width": 240,
                                                      }
                            }
              >
                            Actions
              </WithStyles(TableCell)>
</WithStyles(TableRow)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableCell)>
                  Problem name
</WithStyles(TableCell)>,
                <WithStyles(TableCell)
                  style={
                                    Object {
                                                      "width": 240,
                                                    }
                  }
>
                  Actions
</WithStyles(TableCell)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Problem name",
                },
                "ref": null,
                "rendered": "Problem name",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Actions",
                  "style": Object {
                    "width": 240,
                  },
                },
                "ref": null,
                "rendered": "Actions",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                                Test
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                                <Link
                                                className="ProblemsTable-link-1"
                                                replace={false}
                                                to="/paths/undefined/problems/test"
                                >
                                                <WithStyles(Button)
                                                                variant="raised"
                                                >
                                                                Open
                                                </WithStyles(Button)>
                                </Link>
                                <WithStyles(Button)
                                                className="ProblemsTable-button-2"
                                                onClick={[Function]}
                                                variant="raised"
                                >
                                                Edit
                                </WithStyles(Button)>
                </WithStyles(TableCell)>
</WithStyles(TableRow)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "test",
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(TableCell)>
                    Test
</WithStyles(TableCell)>,
                  <WithStyles(TableCell)>
                    <Link
                                        className="ProblemsTable-link-1"
                                        replace={false}
                                        to="/paths/undefined/problems/test"
                    >
                                        <WithStyles(Button)
                                                            variant="raised"
                                        >
                                                            Open
                                        </WithStyles(Button)>
                    </Link>
                    <WithStyles(Button)
                                        className="ProblemsTable-button-2"
                                        onClick={[Function]}
                                        variant="raised"
                    >
                                        Edit
                    </WithStyles(Button)>
</WithStyles(TableCell)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Test",
                  },
                  "ref": null,
                  "rendered": "Test",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Link
                        className="ProblemsTable-link-1"
                        replace={false}
                        to="/paths/undefined/problems/test"
>
                        <WithStyles(Button)
                                                variant="raised"
                        >
                                                Open
                        </WithStyles(Button)>
</Link>,
                      <WithStyles(Button)
                        className="ProblemsTable-button-2"
                        onClick={[Function]}
                        variant="raised"
>
                        Edit
</WithStyles(Button)>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <WithStyles(Button)
                          variant="raised"
>
                          Open
</WithStyles(Button)>,
                        "className": "ProblemsTable-link-1",
                        "replace": false,
                        "to": "/paths/undefined/problems/test",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Open",
                          "variant": "raised",
                        },
                        "ref": null,
                        "rendered": "Open",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Edit",
                        "className": "ProblemsTable-button-2",
                        "onClick": [Function],
                        "variant": "raised",
                      },
                      "ref": null,
                      "rendered": "Edit",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;
