{"changed":false,"filter":false,"title":"Path.js","tooltip":"/src/containers/Path/Path.js","value":"/**\n * @file Path container module\n * @author Theodor Shaytanov <theodor.shaytanov@gmail.com>\n * @created 17.03.18\n */\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nimport { APP_SETTING } from \"../../achievementsApp/config\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nimport ActivitiesTable from \"../../components/tables/ActivitiesTable\";\n\nimport { firebaseConnect } from \"react-redux-firebase\";\n\nimport withRouter from \"react-router-dom/withRouter\";\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\nimport {\n  pathStatusSelector,\n  pathActivitiesSelector,\n  PATH_STATUS_JOINED,\n  PATH_STATUS_OWNER,\n  PATH_STATUS_NOT_JOINED,\n  codeCombatProfileSelector,\n  PATH_STATUS_COLLABORATOR\n} from \"./selectors\";\nimport {\n  pathAddCollaboratorRequest,\n  pathCloseDialog,\n  pathMoreProblemsRequest,\n  pathOpen,\n  pathOpenSolutionDialog,\n  pathRefreshSolutionsRequest,\n  pathRemoveCollaboratorRequest,\n  pathShowCollaboratorsDialog,\n  pathToggleJoinStatusRequest,\n  fetchGithubFiles,\n  pathActivityCodeCombatOpen,\n  pathOpenJestSolutionDialog\n} from \"./actions\";\nimport {\n  pathActivityChangeRequest,\n  pathActivityDeleteRequest,\n  pathActivityDialogShow,\n  pathActivityMoveRequest\n} from \"../Paths/actions\";\nimport AddActivityDialog from \"../../components/dialogs/AddActivityDialog\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { sagaInjector } from \"../../services/saga\";\nimport sagas from \"./sagas\";\nimport AddTextSolutionDialog from \"../../components/dialogs/AddTextSolutionDialog\";\nimport AddJestSolutionDialog from \"../../components/dialogs/AddJestSolutionDialog\";\nimport AddGameSolutionDialog from \"../../components/dialogs/AddGameSolutionDialog\";\nimport AddGameTournamentSolutionDialog from \"../../components/dialogs/AddGameTournamentSolutionDialog\";\nimport { ACTIVITY_TYPES } from \"../../services/paths\";\nimport { notificationShow } from \"../Root/actions\";\nimport { problemSolutionSubmitRequest } from \"../Activity/actions\";\nimport FetchCodeCombatDialog from \"../../components/dialogs/FetchCodeCombatDialog\";\nimport { externalProfileUpdateRequest } from \"../Account/actions\";\nimport { pathActivities } from \"../../types/index\";\nimport ControlAssistantsDialog from \"../../components/dialogs/ControlAssistantsDialog\";\nimport { assignmentAssistantKeyChange } from \"../Assignments/actions\";\nimport DeleteConfirmationDialog from \"../../components/dialogs/DeleteConfirmationDialog\";\nimport { Typography } from \"@material-ui/core\";\nimport RequestMorePathContentDialog from \"../../components/dialogs/RequestMorePathContentDialog\";\nimport FetchCodeCombatLevelDialog from \"../../components/dialogs/FetchCodeCombatLevelDialog\";\nimport AddProfileDialog from \"../../components/dialogs/AddProfileDialog\";\nimport AddCreatorSolutionDialog from \"../../components/dialogs/AddCreatorSolutionDialog\";\n\nconst styles = theme => ({\n  toolbarButton: {\n    marginLeft: theme.spacing.unit\n  }\n});\n\nexport class Path extends React.Component {\n  static propTypes = {\n    classes: PropTypes.object,\n    codeCombatProfile: PropTypes.any,\n    match: PropTypes.object,\n    onAddAssistant: PropTypes.func,\n    onAssistantKeyChange: PropTypes.func,\n    onCloseDialog: PropTypes.func,\n    onNotification: PropTypes.func,\n    onOpen: PropTypes.func,\n    onOpenSolution: PropTypes.func,\n    onActivityChangeRequest: PropTypes.func,\n    onActivityCodeCombatOpen: PropTypes.func,\n    onActivityDeleteRequest: PropTypes.func,\n    onActivityDialogShow: PropTypes.func,\n    onActivityMoveRequest: PropTypes.func,\n    onActivitySolutionSubmit: PropTypes.func,\n    onProfileUpdate: PropTypes.func,\n    onPushPath: PropTypes.func,\n    onRefreshSolutions: PropTypes.func,\n    onRemoveAssistant: PropTypes.func,\n    onRequestMoreProblems: PropTypes.func,\n    onShowCollaboratorsClick: PropTypes.func,\n    onToggleJoinStatus: PropTypes.func,\n    fetchGithubFiles: PropTypes.func,\n    pathActivities: pathActivities,\n    pathStatus: PropTypes.string,\n    pendingActivityId: PropTypes.string,\n    pendingProfileUpdate: PropTypes.bool,\n    ui: PropTypes.any,\n    uid: PropTypes.string,\n    openJestActivity: PropTypes.func\n  };\n\n  state = {\n    selectedActivityId: \"\",\n    botsQuantity: 0,\n    requestMoreDialogShow: false\n  };\n\n  componentDidMount() {\n    this.props.onOpen(this.props.match.params.pathId);\n  }\n\n  onMoveActivity = (problem, direction) => {\n    const { pathActivities, onActivityMoveRequest } = this.props;\n\n    onActivityMoveRequest(pathActivities.path.id, problem.id, direction);\n  };\n\n  onOpenActivity = activity => {\n    const {\n      codeCombatProfile,\n      onOpenSolution,\n      onActivityCodeCombatOpen,\n      onPushPath,\n      pathActivities,\n      openJestActivity\n    } = this.props;\n    this.setState(() => ({\n      botsQuantity: activity.unitsPerSide\n    }));\n    switch (activity.type) {\n      case ACTIVITY_TYPES.profile.id:\n      case ACTIVITY_TYPES.codeCombat.id:\n      case ACTIVITY_TYPES.codeCombatNumber.id:\n        onActivityCodeCombatOpen(\n          pathActivities.path.id,\n          activity.id,\n          codeCombatProfile && codeCombatProfile.id,\n          activity\n        );\n        break;\n      case ACTIVITY_TYPES.jupyterInline.id:\n      case ACTIVITY_TYPES.jupyter.id:\n      case ACTIVITY_TYPES.youtube.id:\n        onPushPath(\n          `/paths/${pathActivities.path.id}/activities/${activity.id}`\n        );\n        break;\n      case ACTIVITY_TYPES.jest.id:\n        if (activity.version >= 1) {\n          openJestActivity(pathActivities.path.id, activity);\n        } else {\n          onOpenSolution(pathActivities.path.id, activity);\n        }\n        break;\n      default:\n        onOpenSolution(pathActivities.path.id, activity);\n    }\n  };\n\n  requestMoreDialogHide = () => this.setState({ requestMoreDialogShow: false });\n  requestMoreDialogShow = () => this.setState({ requestMoreDialogShow: true });\n\n  requestMoreProblems = () =>\n    this.props.onRequestMoreProblems(\n      this.props.uid,\n      this.props.pathActivities.path.id,\n      this.props.pathActivities.activities.length\n    );\n\n  refreshSolutions = () =>\n    this.props.onRefreshSolutions(this.props.pathActivities.path.id);\n\n  changeJoinStatus = () =>\n    this.props.onToggleJoinStatus(\n      this.props.uid,\n      this.props.pathActivities.path.id,\n      this.props.pathStatus === PATH_STATUS_NOT_JOINED\n    );\n\n  onAddActivityClick = () => this.props.onActivityDialogShow();\n  onTextSolutionSubmit = (solution, activityId) => {\n    const {\n      onCloseDialog,\n      onActivitySolutionSubmit,\n      pathActivities\n    } = this.props;\n    const activity = pathActivities.activities.find(\n      activity => activity.id === activityId\n    );\n    onActivitySolutionSubmit(\n      pathActivities.path.id,\n      { ...activity, problemId: activity.id },\n      solution\n    );\n    onCloseDialog();\n  };\n  onProfileUpdate = profile => {\n    const {\n      onCloseDialog,\n      onActivitySolutionSubmit,\n      onProfileUpdate,\n      ui\n    } = this.props;\n\n    onProfileUpdate(profile, \"CodeCombat\");\n    onActivitySolutionSubmit(\n      ui.dialog.value.path,\n      { ...ui.dialog.value, problemId: ui.dialog.value.id },\n      profile\n    );\n    onCloseDialog();\n  };\n\n  onActivityDeleteRequest = (activityId, pathId) => {\n    this.setState({\n      selectedActivityId: activityId,\n      selectedPathId: pathId\n    });\n  };\n\n  onActivityChangeRequest = (id, data) => {\n    const { pathActivities = {}, onActivityChangeRequest } = this.props;\n    const activities = pathActivities.activities || [];\n    let additionalData = {};\n    if (!data.id) {\n      let maxOrderIndex = -Infinity;\n      activities.forEach(activity => {\n        maxOrderIndex =\n          activity.orderIndex > maxOrderIndex\n            ? activity.orderIndex\n            : maxOrderIndex;\n      });\n      maxOrderIndex = maxOrderIndex === -Infinity ? 1 : maxOrderIndex + 1;\n      additionalData = {\n        orderIndex: maxOrderIndex\n      };\n    }\n    onActivityChangeRequest(id, {\n      ...data,\n      ...additionalData\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      codeCombatProfile,\n      match,\n      onAddAssistant,\n      onAssistantKeyChange,\n      onCloseDialog,\n      onActivityDeleteRequest,\n      onActivityDialogShow,\n      onProfileUpdate,\n      onShowCollaboratorsClick,\n      onRemoveAssistant,\n      pathActivities,\n      pathStatus,\n      pendingActivityId,\n      pendingProfileUpdate,\n      ui,\n      uid,\n      fetchGithubFiles\n    } = this.props;\n\n    if (!(pathActivities && pathActivities.path)) {\n      return <LinearProgress />;\n    }\n\n    const allFinished =\n      (pathActivities.activities || []).filter(problem => problem.solved)\n        .length === (pathActivities.activities || []).length;\n    const hasActivities =\n      ui.dialog.pathsInfo &&\n      ui.dialog.pathsInfo.filter(\n        pathInfo => pathInfo.activities && pathInfo.activities.length\n      ).length;\n    // Flag that used for creator and educator activities to force\n    // AddActivityDialog to create new activity of required type instead of\n    // editing existing activity\n    // FIXIT: move it into selectors\n    const isCreatorActivity =\n      ui.dialog.value &&\n      ui.dialog.value.owner !== uid &&\n      ui.dialog.value.type === ACTIVITY_TYPES.creator.id;\n\n    let pathName, pathDesc;\n\n    if (match.params.pathId[0] !== \"-\") {\n      pathName = \"Default\";\n    }\n\n    pathName =\n      pathName || (pathActivities.path && pathActivities.path.name) || \"\";\n    pathDesc =\n      (pathActivities.path && pathActivities.path.description) ||\n      \"None Provided\";\n\n    return (\n      <Fragment>\n        <Breadcrumbs\n          action={\n            (![PATH_STATUS_OWNER, PATH_STATUS_COLLABORATOR].includes(\n              pathStatus\n            ) && [\n              allFinished && {\n                label: \"Request more\",\n                handler: this.requestMoreDialogShow.bind(this)\n              },\n              // disable Refresh button.\n              // !allFinished && {\n              // label: \"Refresh\",\n              // handler: this.refreshSolutions.bind(this)\n              // },\n              uid && {\n                label: pathStatus === PATH_STATUS_JOINED ? \"Leave\" : \"Join\",\n                handler: this.changeJoinStatus.bind(this)\n              }\n            ]) ||\n            []\n          }\n          paths={[\n            {\n              label: \"Paths\",\n              link: \"/paths\"\n            },\n            {\n              label: pathName\n            }\n          ]}\n        />\n        <Typography\n          gutterBottom\n          style={{\n            marginLeft: 30\n          }}\n        >\n          Path Description: {pathDesc}\n        </Typography>\n        {[PATH_STATUS_OWNER, PATH_STATUS_COLLABORATOR].includes(pathStatus) &&\n          (!APP_SETTING.isSuggesting ? (\n            <Toolbar>\n              <Button\n                color=\"primary\"\n                onClick={this.onAddActivityClick}\n                variant=\"contained\"\n              >\n                Add Activity\n              </Button>\n              {pathStatus === PATH_STATUS_OWNER && (\n                <Button\n                  className={classes.toolbarButton}\n                  onClick={() =>\n                    onShowCollaboratorsClick(pathActivities.path.id)\n                  }\n                  variant=\"contained\"\n                >\n                  Collaborators\n                </Button>\n              )}\n            </Toolbar>\n          ) : (\n            <Button\n              aria-label=\"Add\"\n              color=\"primary\"\n              onClick={this.onAddActivityClick}\n              style={{\n                position: \"fixed\",\n                bottom: 20,\n                right: 20\n              }}\n              variant=\"fab\"\n            >\n              <AddIcon />\n            </Button>\n          ))}\n        <AddTextSolutionDialog\n          onClose={onCloseDialog}\n          onCommit={this.onTextSolutionSubmit}\n          open={ui.dialog.type === `${ACTIVITY_TYPES.text.id}Solution`}\n          solution={ui.dialog.solution}\n          taskId={ui.dialog.value && ui.dialog.value.id}\n        />\n        <AddJestSolutionDialog\n          onClose={onCloseDialog}\n          onCommit={this.onTextSolutionSubmit}\n          open={ui.dialog.type === `${ACTIVITY_TYPES.jest.id}Solution`}\n          problem={ui.dialog.value}\n          taskId={ui.dialog.value && ui.dialog.value.id}\n        />\n        <AddGameSolutionDialog\n          botsQuantity={this.state.botsQuantity}\n          onClose={onCloseDialog}\n          onCommit={this.onTextSolutionSubmit}\n          open={ui.dialog.type === `${ACTIVITY_TYPES.game.id}Solution`}\n          problem={ui.dialog.value}\n          taskId={ui.dialog.value && ui.dialog.value.id}\n        />\n        <AddGameTournamentSolutionDialog\n          onClose={onCloseDialog}\n          onCommit={this.onTextSolutionSubmit}\n          open={\n            ui.dialog.type === `${ACTIVITY_TYPES.gameTournament.id}Solution`\n          }\n          problem={ui.dialog.value}\n          taskId={ui.dialog.value && ui.dialog.value.id}\n        />\n        <AddCreatorSolutionDialog\n          onClose={onCloseDialog}\n          onCommit={this.onTextSolutionSubmit}\n          open={\n            !!(\n              [\"creatorSolution\", \"educatorSolution\"].includes(\n                ui.dialog.type\n              ) &&\n              ui.dialog.pathsInfo &&\n              hasActivities\n            )\n          }\n          pathsInfo={ui.dialog.pathsInfo || []}\n        />\n        <FetchCodeCombatDialog\n          currentUserId={uid}\n          defaultValue={(codeCombatProfile && codeCombatProfile.id) || \"\"}\n          externalProfile={{\n            url: \"https://codecombat.com\",\n            id: \"CodeCombat\",\n            name: \"CodeCombat\",\n            description: \"learn programming by playing games\"\n          }}\n          onClose={onCloseDialog}\n          onCommit={this.onProfileUpdate}\n          open={ui.dialog.type === `${ACTIVITY_TYPES.profile.id}Solution`}\n        />\n        <ActivitiesTable\n          activities={pathActivities.activities || []}\n          codeCombatProfile={codeCombatProfile}\n          currentUserId={uid || \"Anonymous\"}\n          onDeleteActivity={this.onActivityDeleteRequest}\n          onEditActivity={onActivityDialogShow}\n          onMoveActivity={this.onMoveActivity}\n          onOpenActivity={this.onOpenActivity}\n          pathStatus={pathStatus}\n          pendingActivityId={pendingActivityId}\n          selectedPathId={(pathActivities.path && pathActivities.path.id) || \"\"}\n        />\n        <AddProfileDialog\n          externalProfile={{\n            url: \"https://codecombat.com\",\n            name: \"CodeCombat\",\n            id: \"CodeCombat\"\n          }}\n          inProgress={pendingProfileUpdate}\n          keepOnCommit={true}\n          onClose={onCloseDialog}\n          onCommit={profile => {\n            onProfileUpdate(profile, \"CodeCombat\");\n          }}\n          open={ui.dialog && ui.dialog.type === \"Profile\"}\n          uid={uid}\n        />\n        <AddActivityDialog\n          activity={!isCreatorActivity && ui.dialog.value}\n          fetchGithubFiles={fetchGithubFiles}\n          fetchGithubFilesStatus={ui.fetchGithubFilesStatus}\n          onClose={onCloseDialog}\n          onCommit={this.onActivityChangeRequest}\n          open={\n            ui.dialog.type === \"ProblemChange\" ||\n            !!(\n              [\"creatorSolution\", \"educatorSolution\"].includes(\n                ui.dialog.type\n              ) &&\n              ui.dialog.pathsInfo &&\n              !hasActivities\n            )\n          }\n          pathId={\n            [\"creatorSolution\", \"educatorSolution\"].includes(ui.dialog.type)\n              ? \"\"\n              : (pathActivities.path && pathActivities.path.id) || \"\"\n          }\n          pathsInfo={ui.dialog.pathsInfo || []}\n          restrictedType={isCreatorActivity && ui.dialog.value.targetType}\n          uid={uid || \"Anonymous\"}\n        />\n        <DeleteConfirmationDialog\n          message=\"This will remove activity\"\n          onClose={() => this.setState({ selectedActivityId: \"\" })}\n          onCommit={() => {\n            onActivityDeleteRequest(\n              this.state.selectedActivityId,\n              this.state.selectedPathId\n            );\n            this.setState({ selectedActivityId: \"\" });\n          }}\n          open={!!this.state.selectedActivityId}\n        />\n        <ControlAssistantsDialog\n          assistants={ui.dialog.assistants}\n          newAssistant={ui.dialog.newAssistant}\n          onAddAssistant={onAddAssistant}\n          onAssistantKeyChange={onAssistantKeyChange}\n          onClose={onCloseDialog}\n          onRemoveAssistant={onRemoveAssistant}\n          open={ui.dialog.type === \"CollaboratorsControl\"}\n          target={pathActivities.path.id}\n        />\n        <FetchCodeCombatLevelDialog\n          activity={pathActivities.activities.find(\n            activity => activity.id === pendingActivityId\n          )}\n          codeCombatId={codeCombatProfile && codeCombatProfile.id}\n          onClose={onCloseDialog}\n          open={ui.dialog.type === \"FetchCodeCombatLevel\"}\n        />\n        <RequestMorePathContentDialog\n          onClose={this.requestMoreDialogHide}\n          onConfirm={this.requestMoreProblems}\n          open={this.state.requestMoreDialogShow}\n        />\n      </Fragment>\n    );\n  }\n}\n\nsagaInjector.inject(sagas);\n\nconst mapStateToProps = (state, ownProps) => ({\n  codeCombatProfile: codeCombatProfileSelector(state),\n  pathActivities: pathActivitiesSelector(state, ownProps),\n  pathStatus: pathStatusSelector(state, ownProps),\n  pendingActivityId: state.path.ui.pendingActivityId,\n  pendingProfileUpdate: state.path.ui.pendingProfileUpdate,\n  ui: state.path.ui,\n  uid: state.firebase.auth.uid\n});\n\nconst mapDispatchToProps = {\n  onAddAssistant: pathAddCollaboratorRequest,\n  onAssistantKeyChange: assignmentAssistantKeyChange,\n  onCloseDialog: pathCloseDialog,\n  onNotification: notificationShow,\n  onOpen: pathOpen,\n  onShowCollaboratorsClick: pathShowCollaboratorsDialog,\n  onProfileUpdate: externalProfileUpdateRequest,\n  onOpenSolution: pathOpenSolutionDialog,\n  onActivityChangeRequest: pathActivityChangeRequest,\n  onActivityCodeCombatOpen: pathActivityCodeCombatOpen,\n  onActivityDeleteRequest: pathActivityDeleteRequest,\n  onActivityDialogShow: pathActivityDialogShow,\n  onActivityMoveRequest: pathActivityMoveRequest,\n  onActivitySolutionSubmit: problemSolutionSubmitRequest,\n  onPushPath: push,\n  onRefreshSolutions: pathRefreshSolutionsRequest,\n  onRemoveAssistant: pathRemoveCollaboratorRequest,\n  onRequestMoreProblems: pathMoreProblemsRequest,\n  onToggleJoinStatus: pathToggleJoinStatusRequest,\n  fetchGithubFiles: fetchGithubFiles,\n  openJestActivity: pathOpenJestSolutionDialog\n};\n\nexport default compose(\n  withStyles(styles),\n  withRouter,\n  firebaseConnect((ownProps, store) => {\n    const state = store.getState();\n    const uid = state.firebase.auth.uid;\n    const pathId = ownProps.match.params.pathId;\n\n    if (!uid) {\n      return [\n        `/paths/${pathId}`,\n        `/activities#orderByChild=path&equalTo=${pathId}`\n      ];\n    }\n\n    return [\n      `/activities#orderByChild=path&equalTo=${pathId}`,\n      `/completedActivities/${uid}/${pathId}`,\n      `/paths/${pathId}`,\n      `/pathAssistants/${pathId}`,\n      `/activities#orderByChild=path&equalTo=${pathId}`,\n      `/studentJoinedPaths/${uid}/${pathId}`,\n      `userAchievements/${uid}/CodeCombat`\n    ];\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Path);\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":4380,"scrollleft":0,"selection":{"start":{"row":25,"column":8},"end":{"row":25,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":272,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1542575623582}